vendor_name = ModelSim
source_file = 1, C:/Users/Admin/Desktop/Labs_ABC/lab04/src/lab_4_2/lab_4_2.sv
source_file = 1, C:/Users/Admin/Desktop/Labs_ABC/lab04/src/lab_4_2/controller.tv
source_file = 1, C:/Users/Admin/Desktop/Labs_ABC/lab04/src/lab_4_2/db/lab_4_2.cbx.xml
design_name = controller
instance = comp, \ImmSrc[0]~output , ImmSrc[0]~output, controller, 1
instance = comp, \ImmSrc[1]~output , ImmSrc[1]~output, controller, 1
instance = comp, \ALUSrcA[0]~output , ALUSrcA[0]~output, controller, 1
instance = comp, \ALUSrcA[1]~output , ALUSrcA[1]~output, controller, 1
instance = comp, \ALUSrcB[0]~output , ALUSrcB[0]~output, controller, 1
instance = comp, \ALUSrcB[1]~output , ALUSrcB[1]~output, controller, 1
instance = comp, \ResultSrc[0]~output , ResultSrc[0]~output, controller, 1
instance = comp, \ResultSrc[1]~output , ResultSrc[1]~output, controller, 1
instance = comp, \AdrSrc~output , AdrSrc~output, controller, 1
instance = comp, \ALUControl[0]~output , ALUControl[0]~output, controller, 1
instance = comp, \ALUControl[1]~output , ALUControl[1]~output, controller, 1
instance = comp, \ALUControl[2]~output , ALUControl[2]~output, controller, 1
instance = comp, \IRWrite~output , IRWrite~output, controller, 1
instance = comp, \PCWrite~output , PCWrite~output, controller, 1
instance = comp, \RegWrite~output , RegWrite~output, controller, 1
instance = comp, \MemWrite~output , MemWrite~output, controller, 1
instance = comp, \op[3]~input , op[3]~input, controller, 1
instance = comp, \op[6]~input , op[6]~input, controller, 1
instance = comp, \op[1]~input , op[1]~input, controller, 1
instance = comp, \op[4]~input , op[4]~input, controller, 1
instance = comp, \op[0]~input , op[0]~input, controller, 1
instance = comp, \op[5]~input , op[5]~input, controller, 1
instance = comp, \instr_decorder|Equal1~0 , instr_decorder|Equal1~0, controller, 1
instance = comp, \op[2]~input , op[2]~input, controller, 1
instance = comp, \instr_decorder|Equal0~0 , instr_decorder|Equal0~0, controller, 1
instance = comp, \instr_decorder|ImmSrc[0] , instr_decorder|ImmSrc[0], controller, 1
instance = comp, \instr_decorder|ImmSrc~0 , instr_decorder|ImmSrc~0, controller, 1
instance = comp, \clk~input , clk~input, controller, 1
instance = comp, \clk~inputCLKENA0 , clk~inputCLKENA0, controller, 1
instance = comp, \main_fsm|Equal2~0 , main_fsm|Equal2~0, controller, 1
instance = comp, \main_fsm|state.MemAdrState~0 , main_fsm|state.MemAdrState~0, controller, 1
instance = comp, \reset~input , reset~input, controller, 1
instance = comp, \main_fsm|state.MemAdrState , main_fsm|state.MemAdrState, controller, 1
instance = comp, \main_fsm|nextstate.MemReadState~0 , main_fsm|nextstate.MemReadState~0, controller, 1
instance = comp, \main_fsm|state.MemReadState , main_fsm|state.MemReadState, controller, 1
instance = comp, \main_fsm|state.MemWBState , main_fsm|state.MemWBState, controller, 1
instance = comp, \main_fsm|nextstate.BEQState~0 , main_fsm|nextstate.BEQState~0, controller, 1
instance = comp, \main_fsm|state.BEQState , main_fsm|state.BEQState, controller, 1
instance = comp, \main_fsm|nextstate.MemWriteState~0 , main_fsm|nextstate.MemWriteState~0, controller, 1
instance = comp, \main_fsm|state.MemWriteState , main_fsm|state.MemWriteState, controller, 1
instance = comp, \main_fsm|nextstate.ExecuteRState~0 , main_fsm|nextstate.ExecuteRState~0, controller, 1
instance = comp, \main_fsm|state.ExecuteRState , main_fsm|state.ExecuteRState, controller, 1
instance = comp, \main_fsm|nextstate.ExecutelState~0 , main_fsm|nextstate.ExecutelState~0, controller, 1
instance = comp, \main_fsm|state.ExecutelState , main_fsm|state.ExecutelState, controller, 1
instance = comp, \main_fsm|nextstate.JALState~0 , main_fsm|nextstate.JALState~0, controller, 1
instance = comp, \main_fsm|state.JALState , main_fsm|state.JALState, controller, 1
instance = comp, \main_fsm|WideOr3 , main_fsm|WideOr3, controller, 1
instance = comp, \main_fsm|state.ALUWBState , main_fsm|state.ALUWBState, controller, 1
instance = comp, \main_fsm|WideOr0 , main_fsm|WideOr0, controller, 1
instance = comp, \main_fsm|state.FetchState , main_fsm|state.FetchState, controller, 1
instance = comp, \main_fsm|Selector0~0 , main_fsm|Selector0~0, controller, 1
instance = comp, \main_fsm|state.DecodeState , main_fsm|state.DecodeState, controller, 1
instance = comp, \main_fsm|ALUSrcA[0] , main_fsm|ALUSrcA[0], controller, 1
instance = comp, \main_fsm|ALUSrcA[1] , main_fsm|ALUSrcA[1], controller, 1
instance = comp, \main_fsm|ALUSrcB[0] , main_fsm|ALUSrcB[0], controller, 1
instance = comp, \main_fsm|ALUSrcB[1]~0 , main_fsm|ALUSrcB[1]~0, controller, 1
instance = comp, \main_fsm|state.MemWBState~DUPLICATE , main_fsm|state.MemWBState~DUPLICATE, controller, 1
instance = comp, \main_fsm|AdrSrc , main_fsm|AdrSrc, controller, 1
instance = comp, \funct3[0]~input , funct3[0]~input, controller, 1
instance = comp, \funct7b5~input , funct7b5~input, controller, 1
instance = comp, \funct3[1]~input , funct3[1]~input, controller, 1
instance = comp, \alu_decoder|Selector0~0 , alu_decoder|Selector0~0, controller, 1
instance = comp, \alu_decoder|Selector0~1 , alu_decoder|Selector0~1, controller, 1
instance = comp, \funct3[2]~input , funct3[2]~input, controller, 1
instance = comp, \alu_decoder|ALUControl[1]~0 , alu_decoder|ALUControl[1]~0, controller, 1
instance = comp, \alu_decoder|ALUControl[2]~1 , alu_decoder|ALUControl[2]~1, controller, 1
instance = comp, \Zero~input , Zero~input, controller, 1
instance = comp, \PCWrite~0 , PCWrite~0, controller, 1
instance = comp, \PCWrite~1 , PCWrite~1, controller, 1
instance = comp, \main_fsm|WideOr0~0 , main_fsm|WideOr0~0, controller, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, controller, 1
